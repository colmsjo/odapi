!function(){var t=(console.log.bind(console),console.info.bind(console)),e=console.debug.bind(console,"DEBUG");console.error.bind(console,"ERROR"),window.helpers;Odata=function(t){if(!t.accountId||!t.password||!t.url)throw"ERROR: url, accountId and password must be set!";this.options=t,this.credentials={user:t.accountId,password:t.password},this.url=t.url,this.password=t.password,this.accountId=t.accountId},Odata.DEV_URL="https://odatadev.gizur.com/",Odata.PROD_URL="https://odata.gizur.com/",Odata.createAccount=function(t){e("createAccount",t);var o={email:t.email};return remote.xhrJSON(t.url+"create_account","POST",o)},Odata.resetPassword=function(t){var e={accountId:t.accountId,email:t.email};return remote.xhrJSON(t.url+t.accountId+"/s/reset_password","POST",e)},Odata.prototype.createTable=function(t,e){var o={tableDef:{tableName:t,columns:e}};return remote.xhrJSON(this.url+this.accountId+"/s/create_table","POST",o,this.credentials)},Odata.prototype.accountInfo=function(){return remote.xhrJSON(this.url+this.accountId,"GET",null,this.credentials)},Odata.prototype.grant=function(t,e){var o={tableName:t,accountId:e};return remote.xhrJSON(this.url+this.accountId+"/s/grant","POST",o,this.credentials)},Odata.prototype.insert=function(t,e,o){return remote.xhrJSON(this.url+t+"/"+e,"POST",o,this.credentials)},Odata.prototype.get=function(t,e,o,n,a,r){var c={};o&&(c.$select=o),n&&(c.$filter=n),a&&(c.$orderby=a),r&&(c.$skip=r);var s=this.url+t+"/"+e;return s+=o||n||a||r?"?":"",s+=Qs.stringify(c),remote.xhrJSON(s,"GET",null,this.credentials)},Odata.prototype["delete"]=function(t,e,o){var n=this.url+t+"/"+e;return n+=o?"?$filter="+o:"",remote.xhrJSON(n,"DELETE",null,this.credentials)},Odata.prototype.update=function(t,e,o,n){var a=this.url+t+"/"+e;return a+=n?"?$filter="+n:"",remote.xhrJSON(a,"PUT",o,this.credentials)},Odata.prototype.drop=function(t){var e={tableName:t};return remote.xhrJSON(this.url+this.accountId+"/s/delete_table","POST",e,{user:this.accountId,password:this.password})},Odata.prototype.createBucket=function(t){var e={bucketName:t};return remote.xhrJSON(this.url+this.accountId+"/s/create_bucket","POST",e,this.credentials)},Odata.prototype.store=function(t,e,o){return remote.xhrJSON(this.url+t+"/"+e,"POST",o,this.credentials)},Odata.prototype.fetch=function(t,e){return remote.xhrJSON(this.url+t+"/"+e,"GET",null,this.credentials)},Odata.prototype.deleteAccount=function(t,e){var o={accountId:t,email:e};return remote.xhrJSON(this.url+t+"/s/delete_account","POST",o,this.credentials)},Odata.prototype.executeProcedure=function(t,e,o){var n={procedure:e,params:o};return remote.xhrJSON(this.url+t+"/s/exec","POST",n,this.credentials)},Odata.prototype.grantBucket=function(t,e){var o={name:e,verbs:["select","insert","update","delete"],accountId:t};return remote.xhrJSON(this.url+this.accountId+"/s/grant_bucket","POST",o,this.credentials)},Odata.prototype.revokeBucket=function(t,e){var o={name:e,verbs:["select","insert","update","delete"],accountId:t};return remote.xhrJSON(this.url+this.accountId+"/s/revoke_bucket","POST",o,this.credentials)},Odata.help2=function(t){if(!t)throw"ERROR: Mandatory url argument is missing. The constants Odata.DEV_URL and Odata.PROD_URL can for instance be used.";return remote.xhrJSON(t+"help","GET")},Odata.help=function(e){if(!e){var o="-- Odata API help --\n\n* Odata.help('accounts') - create accounts, reset password etc.\n* Odata.help('tables') - working with tables\n* Odata.help('buckets') - working with buckets";return void t(o)}if("accounts"===e){var o="An account can be created in the odata server if you don't alreqady have one:\nThis creas an account and saves the accountid in options.accountId\nA 404 i received if the account already exists, the account id is saved anyway\n\nvar log = console.log.bind(console);\n\nvar options = {url: Odata.DEV_URL, email: 'joe@example.com'};\nOdata.createAccount(options).then(\n	function(res){log(options.accountId=res.data[1].accountId)}, \n	function(res){log(options.accountId=res.data[1].accountId)});\n\nOdata.resetPassword(options).then(\n	function(res){log(options.password=res.data[0].password)}, log);\n\nNow is options setup with the required data to work with the odataserver\n\nA second account is used in some of the examples in this help.\n\nvar options2 = {url: Odata.DEV_URL, email: 'gina@example.com'}\nOdata.createAccount(options2).then(\n	function(res){log(options2.accountId=res.data[1].accountId)}, \n	function(res){log(options2.accountId=res.data[1].accountId)});\n\nOdata.resetPassword(options2).then(\n	function(res){log(options2.password=res.data[0].password)}, log);\n\nDelete an account\nvar od = new Odata(options);\nod.deleteAccount(options.accountId).then(log);\n";t(o)}else if("tables"===e){var o="options needs to be setup when working with tables (see Odata.help('accounts') ):\n\nvar log = console.log.bind(console);\n\nvar od = new Odata(options);\nod.createTable('mytable', ['col1 int','col2 varchar(255)']).then(log);\nod.accountInfo().then(log);\n\n\nod.grant('mytable', options2.accountId).then(console.log.bind(console));\nod.insert(options.accountId, 'mytable', {col1:11, col2:'11'}).then(log);\nod.insert(options.accountId, 'mytable', {col1:1000, col2:'1010'}).then(log);\nod.get(options.accountId, 'mytable').then(log);\nod.get(options.accountId, 'mytable', 'col1').then(log);\nod.get(options.accountId, 'mytable', null, 'col1 eq 11').then(log);\n\n//delete a row\nod.delete(options.accountId, 'mytable', 'col1 eq 11').then(log);\nod.get(options.accountId, 'mytable').then(log);\n\n//update a row\nod.update(options.accountId, 'mytable', {col1:1000,col2:'1011'}, 'col1 eq 1000').then(log);\nod.get(options.accountId, 'mytable').then(log);\n//drop a table\nod.drop('mytable').then(log);\n";t(o)}else if("buckets"===e){var o="options needs to be setup when working with buckets (see Odata.help('accounts') ):\n\nvar log = console.log.bind(console);\n\nvar od = new Odata(options);\nood.grantBucket(options.accountId,'b_mybucket').then(log);\nod.store(options.accountId, 'b_mybucket', 'Some data to store in a bucket').then(log);\nod.fetch(options.accountId, 'b_mybucket').then(log);\n";t(o)}},window.Odata=Odata}();